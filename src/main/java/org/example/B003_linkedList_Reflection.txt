Рефлексия задания 2.

В целом abstract class LinkedList<T> реализован.
Присутствуют необходимые элементы: конструктор, команды, запросы, запросы статусов (дополнительные запросы).
Разберем детально.
Конструктор:
Замечаний нет, реализован верно, постусловие описано верно.
Команды:
Отсутствуют команды для перемещения курсора, т.к. они были определены как чистые функции и соответственно, как запросы.
Следовательно, постусловия отсутствуют.
Это отсутствующие команды с пред и постусловиями:
// предусловие: список не пуст;
// постусловие: курсор установлен на первый узел в списке
  public void head();

// предусловие: список не пуст;
// постусловие: курсор установлен на последний узел в списке
  public void tail();

// предусловие: правее курсора есть элемент;
// постусловие: курсор сдвинут на один узел вправо
  public void right();

Далее, команды, с пред и пост условиями:
  public void put_right(T value);
  public void put_left(T value);
реализованы верно, пред и пост условия идентичны эталонному решению.
Команда public void remove() отсутствует вообще.
Команда   public void clear() написана верно с правильным постусловием
Команда   public void add_tail(T value) написана верно, постусловие не корректно в части того,
что новый узел добавлен в хвост списка а не как в решении -  «в список добавляется новое значение».
Команды:
 public void remove_all(T value) и public void replace(T value) написаны верно, пред и постусловия аналогичны эталонным.
Команда public void find(T value) описана верно, отсутствует постусловие.

Запросы:
public T get(); // предусловие: список не пуст
  public bool is_head();
  public bool is_tail();
  public bool is_value();
  public int size();
определены верно.

Запросы статусов. Из за того что команды по перемещению курсора не были определены как команды,
а как функции, в запросах статусов отсутствуют:
public int get_head_status(); // успешно; список пуст
public int get_right_status(); // успешно; правее нету элемента

В целом, нужно запомнить следующее: (далее из конспекта)
2) Запросы -- методы, которые вычисляют некоторое значение на основе своих аргументов
(и возможно, на основе значений каких-то скрытых атрибутов класса),
но не меняют значения никаких атрибутов класса (не меняют состояние класса).
По сути, это чистые функции, которым требуются предусловия.
3) Команды, которые никакое значение не вычисляют, но меняют значения атрибутов класса,
меняют состояние класса (возможно, на основе своих аргументов). Для команд требуются постусловия.

Функция возвращает только то значение, которое напрямую от неё требуется по спецификации.
Команды вообще никакого значения не возвращают.

Тогда, управление курсором это команды, т.к. они меняют значение атрибутов (курсора).
Ведь при выполнении, к примеру, команды right, курсор будет указывать на определенный узел,
т.е. его состояние изменится.
