Рефлексия задания 8.

Решение задания 8 не верно. Разберемся, почему это так.

    //команды
    //предусловие: в ассоциативном массиве имеется свободный слот для value
    //постусловие: в ассоциативный массив добавлена новое value
    public void putInMap(String Key, T value);
Так, эта команда спроектирована верно, но, предусловия не будет – т.к. если ключ отсутствовал,
добавится пара ключ-значение, если ключ есть – то значение обновится.
Иначе говоря, у нас нет таких ограничений, которые можно было бы нарушить при добавлении пары ключ-значение.
Постусловие не корректно из-за того, что подразумевалось - система коллизий ищет свободный слот для ключа
и найдя его, ключ кладется в этот слот, а значение кладется в такой же слот,
но массива значений. В случае, если слот занят – значение просто бы обновилось.
Ошибка в том, что родительский класс (как предполагалось, для хода решения) умеет обрабатывать значения
(добавлять, удалять, проверять на наличие) а в данной задаче было необходимо работать
со строковыми значениями ключа (работать с ключом, а не со значениями).
Соответственно и в эталонном решении, операции remove, get, is_key принимают строковые значения
ключа и именно по ключу мы выполняем операции со значением.
