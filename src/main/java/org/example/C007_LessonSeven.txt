

Решение задания 7.

class Weapon {
    public void fire() {
        System.out.println("Выстрел из общего типа оружия");
    }
}

class Pistol extends Weapon {
    @Override
    public void fire() {
        System.out.println("Выстрел из пистолета");
    }
}


public class DynamicBindingExample {
    public static void main(String[] args) {
        Weapon weapon = new Pistol();
        weapon.fire(); // Выстрел из пистолета
    }
}

В этом примере создается объект типа Pistol, но ссылка на него имеет тип Weapon.
Затем вызывается метод fire() у объекта Pistol. На этапе компиляции компилятор видит тип ссылки (Weapon),
и поэтому проверяет, есть ли в классе Weapon метод fire().
Однако на этапе выполнения программа определяет фактический тип объекта (Pistol),
и вызывает соответствующую переопределенную версию метода fire() из класса Pistol.
Таким образом, во время выполнения программа "динамически" определяет,
какую версию метода вызвать, это называется динамическим связыванием.

