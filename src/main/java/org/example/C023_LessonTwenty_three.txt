
Решение задания 23.

Предположим, что существует родительский класс Stack с методом clear() который гарантирует,
что после вызова метода стек станет пустым.
В потомке ImprovedStack, мы переопределяем clear()
и предоставляем улучшенную реализацию с дополнительными действиями.


Теперь рассмотрим, почему нельзя ослаблять постусловия и усиливать предусловия:

Ослабление постусловий:
Если бы мы в потомке ImprovedStack решили ослабить постусловия и не гарантировать,
что стек станет пустым после вызова clear(), это привело бы к нарушению ожиданий,
установленных в родительском классе Stack.
Код, предполагающий, что после clear() стек пуст, не смог бы корректно работать с объектами класса ImprovedStack.

Усиление предусловий:
Если бы мы в родительском классе Stack усилили предусловие для push() и потребовали,
например, чтобы элемент был не null, то в потомке ImprovedStack этого усиления нельзя было бы соблюсти,
так как ImprovedStack должен поддерживать интерфейс родителя.


Таким образом, соблюдение принципа подстановки Барбары Лисков (LSP) требует сохранения базовой логики и гарантий,
предоставляемых родительским классом, в потомке, при этом потомок может предоставить дополнительную функциональность
или улучшенную реализацию, но не должен нарушать контракт, установленный родительским классом.
