Рефлексия задания 5.

1.Тип АТД определен верно. Queue<T>

2.Сигнатуры методов АТД сформированы не верно, такие как:
public T removeHead();
в данном методе выполняется удаление элемента из очереди, с возвратом его значения (смешивается команда и запрос).
Нужно было сделать так.
Определить сигнатуру метода удаляющего элемент из головы очереди (public void dequeue();). – команда.
И определить сигнатуру метода получающего элемент из головы очереди (public T get();). – запрос.


3.Передусовия.

для команды: public void putTail(T value);( //предусловие: очередь полна) не нужно
– предусловие было указано, исходя из принятого ограничения на размер очереди.
(такого ограничения по условию не было)следовательно, данное предусловие не нужно.

для команды: public T removeHead();( //предусловие: очередь создается впервые) сформирована не верно,
предусловие – очередь не пуста, ведь только при непустой очереди возможно выполнение этой команды.
(если представить, что сигнатура определена верно, и не смешивается в одном методе команда и запрос)


4.Постусловия.

для команды: public void putTail(T value);
(//постусловие: размер очереди увеличивается на один элемент)сформировано не верно.
Т.к. в хвост очереди добавлен один элемент, мы же выполняем именно команду добавления в хвост очереди.

для команды: public T removeHead();
(//постусловие: размер очереди уменьшается на один элемент) сформировано не верно.
Т.к. выполняется команда удаления одного элемента из головы и соответственно,
постусловие: из головы очереди удален элемент.


5. Конструктор.
Конструктор и постусловие выполнены верно.


6. Определим какие функции являются командами, а какие запросами.

команда: public void putTail(T value); - верно,
запрос: public int size();(чистая функция)- верно

7. Определим отдельные (дополнительные) запросы для статуса команд.

//запросы
public int size(); //отсутствует комментарий

•	отсутствует полностью, из-за неверной сигнатуры метода удаления:
// предусловие: очередь не пуста;
// постусловие: из головы очереди удалён элемент
  public void dequeue();

•	лишний запрос, т.к. отсутствует предусловие (в эталонном решении)
    //запросы статусов
    public int get_put_tail_status(); // возвращает значение PUT_TAIL_*

•	неверный запрос статуса(не верная сигнатура метода)

    public int get_remove_head_status(); // возвращает значение REMOVE_HEAD_*
