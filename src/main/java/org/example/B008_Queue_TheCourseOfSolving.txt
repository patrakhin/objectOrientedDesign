1. Определим тип АТД:
Queue<T>

2. Сформируем сигнатуры всех методов АТД (без их реализации):
abstract class Queue<T>

    public void putTail(T value);
    public T removeHead();
    public int size();

3. Для каждого метода (при необходимости) задаем набор условий, ограничений на его работу (ПРЕДУСЛОВИЯ)

    public void putTail(T value); //предусловие: очередь полна
    public T removeHead(); //предусловие: очередь создается впервые
    public int size();

4. Определим, что в объекте меняется после вызова того или иного метода (ПОСТУСЛОВИЯ)
    Выпишем функции для которых есть постусловия.

    //предусловие: очередь полна
    //постусловие: размер очереди увеличивается на один элемент
    public void putTail(T value);

    //предусловие: очередь создается впервые
    //постусловие: размер очереди уменьшается на один элемент
    public T removeHead();

    public int size();

5. Конструктор.
    Объекты создаются вызовом особой функции класса.

    // конструктор
    public Queue<T> Queue(); // постусловие: создана пустая очередь

6. Определим какие функции являются командами а какие запросами (пересмотрим методы)

    //предусловие: очередь полна
    //постусловие: размер очереди увеличивается на один элемент
    public void putTail(T value); //команда

    //предусловие: очередь создается впервые
    //постусловие: размер очереди уменьшается на один элемент
    public T removeHead(); //команда

    public int size(); // запрос (чистая функция)

7. Определим отдельные (дополнительные) запросы для статуса команд.
    Возвращают статус выполнения команд у которых есть ПРЕДУСЛОВИЯ.
    Выпишем команды имеющие предусловия и требующие дополнительных запросов.

    //предусловие: очередь полна
    //постусловие: размер очереди увеличивается на один элемент
    public void putTail(T value); //команда

    public const int PUT_TAIL_NIL = 0; // putTail еще не вызывался
    public const int PUT_TAIL_OK = 1; // последний putTail отработал нормально
    public const int PUT_TAIL_ER = 2; // очередь полна

    //предусловие: очередь создается впервые
    //постусловие: размер очереди уменьшается на один элемент
    public T removeHead(); //команда

    public const int REMOVE_HEAD_NIL = 0; // putTail еще не вызывался
    public const int REMOVE_HEAD_OK = 1; // последний removeHead отработал нормально
    public const int REMOVE_HEAD_ER = 2; // очередь пуста/создана

8. Финальная версия АТД DynArray

   abstract class Queue<T>

    // конструктор
    public Queue<T> Queue(); // постусловие: создана пустая очередь

    //команды
    //предусловие: очередь полна
    //постусловие: размер очереди увеличивается на один элемент
    public void putTail(T value);

    //предусловие: очередь создается впервые
    //постусловие: размер очереди уменьшается на один элемент
    public T removeHead();

    //запросы
    public int size();

    //запросы статусов
    public int get_put_tail_status(); // возвращает значение PUT_TAIL_*
    public int get_remove_head_status(); // возвращает значение REMOVE_HEAD_*
